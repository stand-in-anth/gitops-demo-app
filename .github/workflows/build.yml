name: Build Docker image

on:
  workflow_call:
    inputs:
      prefix:
        required: true
        type: string
      image:
        required: false
        type: string
      version:
        required: false
        type: string
      environment:
        required: false
        type: string
    outputs:
      version:
        value: ${{ jobs.prepare.outputs.version }}
      version_full:
        value: ${{ jobs.prepare.outputs.version_full }}
      image_name:
        value: ${{ jobs.prepare.outputs.image_name }}
      image_url:
        value: ${{ jobs.prepare.outputs.image_url }}
      image_full:
        value: ${{ jobs.prepare.outputs.image_full }}
      built:
        value: ${{ jobs.build.result != 'skipped' }}

  workflow_dispatch:
    inputs:
      prefix:
        required: true
        type: string
      image:
        required: false
        type: string
      version:
        required: false
        type: string
      environment:
        required: false
        type: string

  repository_dispatch:
    inputs:
      prefix:
        required: true
        type: string
      image:
        required: false
        type: string
      version:
        required: false
        type: string
      environment:
        required: false
        type: string

env:
  CONTAINER_REGISTRY: ghcr.io

concurrency: build

jobs:
  prepare:
    name: Prepare build
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.vars.outputs.version }}
      version_full: ${{ steps.vars.outputs.version_full }}
      image_name: ${{ steps.vars.outputs.image_name }}
      image_url: ${{ steps.vars.outputs.image_url }}
      image_full: ${{ steps.vars.outputs.image_full }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Compute variables
      id: vars
      run: |
        if [ -z "${{ inputs.version }}" ]; then
          branch=`git branch --show-current`
          sha_short=`git rev-parse --short HEAD`
          version="$branch-$sha_short"
        else
          version="${{ inputs.version }}"
        fi

        version_full="${{ inputs.prefix }}$version-$(date +%s)"

        image_name="${{ inputs.image || github.repository }}"
        image_url="${{ env.CONTAINER_REGISTRY }}/${{ inputs.image || github.repository }}"
        image_full="$image_url:$version_full"

        echo "::set-output name=version::$version"
        echo "::set-output name=version_full::$version_full"
        echo "::set-output name=image_name::$image_name"
        echo "::set-output name=image_url::$image_url"
        echo "::set-output name=image_full::$image_full"

  retag:
    needs: prepare
    name: Re-tag existing Docker image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    outputs:
      status: ${{ steps.push.outcome }}

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    #- name: Push new tag
     # id: push
      #uses: akhilerm/tag-push-action@v2.0.0
      #continue-on-error: true
      #with:
       # src: ${{ needs.prepare.outputs.image_url }}:commit-${{ github.sha }}
        #dst: |
         # ${{ needs.prepare.outputs.image_url }}:${{ inputs.prefix }}latest
          #${{ needs.prepare.outputs.image_full }}

  ending:
    needs:
    - prepare
    - retag
    name: Build and publish Docker image to registry
    runs-on: ubuntu-latest
    if: needs.retag.outputs.status != 'success' && false
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          ${{ needs.prepare.outputs.image_url }}:${{ inputs.prefix }}latest
          ${{ needs.prepare.outputs.image_url }}:commit-${{ github.sha }}
          ${{ needs.prepare.outputs.image_full }}
